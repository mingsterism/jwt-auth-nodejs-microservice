kind: pipeline
type: ssh
name: default

server:
  host: 35.247.140.17
  user: sudo-admin 
  ssh_key:
    from_secret: zoa-admin-ssh 

steps:
  - name: authorize google
    environment:
      GCLOUD_CREDENTIALS_BASE64:
        from_secret: gcloud-credentials-base64
    commands:
      - echo $GCLOUD_CREDENTIALS_BASE64 >> .creds.base64.json
      - cat .creds.base64.json
      - base64 --decode .creds.base64.json > .creds.json 
      - sudo gcloud auth activate-service-account zoa-service-acct@zoa001.iam.gserviceaccount.com --key-file=.creds.json
      - cat .creds.json | sudo docker login -u _json_key --password-stdin https://asia.gcr.io/zoa001/web
      - cat .creds.json | sudo docker login -u _json_key --password-stdin https://asia.gcr.io/zoa001/fileserver
      - cat .creds.json | sudo docker login -u _json_key --password-stdin https://asia.gcr.io/zoa001/jwt
      - cat .creds.json | sudo docker login -u _json_key --password-stdin https://asia.gcr.io/zoa001/caddy-server
      - cat .creds.json | sudo docker login -u _json_key --password-stdin https://asia.gcr.io/zoa001/graphql-server
  - name: cloudbuild jwt-auth-nodejs-microservice 
    commands:
      - sudo gcloud builds submit
  - name: docker compose (deploy)
    commands:
      - cp /home/sudo-admin/docker-compose.yml .
      - sudo docker-compose pull auth-server 
      - sudo docker-compose up -d --build
  - name: slack
    commands:
      - cp /home/sudo-admin/slack/message.sh .
      - sh message.sh
    when:
      status:
        - success
        - failure

trigger:
  branch: 
    - master

---
kind: secret
name: gcloud-credentials-base64 
data: 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 
